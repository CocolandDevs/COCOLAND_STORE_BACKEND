// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

//este es un ejemplo de como se crea una tabla para la base de datos
model usuarios {
  id      Int      @id @default(autoincrement())
  email   String   @unique @db.VarChar(255)
  name    String?  @db.VarChar(100)
  password String   @db.VarChar(255)
  is_stripe_customer String? @db.VarChar(255)
  status  Boolean?  @default(true)
  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt
}

//tabla de Roles
model roles {
  id Int @id @default(autoincrement())
  nombre String @db.VarChar(50)
  status Boolean? @default(true)
  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt
}

//relacion entre usuarios y roles
model usuarios_roles {
  id Int @id @default(autoincrement())
  id_usuario Int
  id_rol Int
  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt
}

//Perfil de usuario
model perfil_usuario{
  id Int @id @default(autoincrement())
  id_usuario Int?
  nombres String? @db.VarChar(100)
  apellidos String? @db.VarChar(100)
  genero String? @db.VarChar(50)
  ubicacion_default Int?
  fecha_nacimiento DateTime?
  telefono Int? 
  imagen String? @db.VarChar(255)
  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt
}

//ubicaciones de envio de un usuario
model ubicaciones_usuario {
  id               Int      @id @default(autoincrement())
  id_usuario       Int
  direccion        String   @db.VarChar(255) 
  complemento      String?  @db.VarChar(255)
  codigo_postal    String   @db.VarChar(20) 
  ciudad           String   @db.VarChar(100)
  estado           String   @db.VarChar(100)
  pais             String   @db.VarChar(100)
  numero_telefonico String?  @db.VarChar(20)
  status           Boolean? @default(true)
  created_at       DateTime? @default(now())
  updated_at       DateTime? @updatedAt
  tipo_direccion  String? @db.VarChar(50)
  alias           String? @db.VarChar(100)
}

// tabla de compras 
model compras_usuario {
  id Int @id @default(autoincrement())
  id_usuario Int
  id_ubicacion Int
  id_metodo_pago Int
  id_cupon Int?
  fecha_compra DateTime @default(now())
  subtotal Decimal
  total Decimal
  tipo_pago String @db.VarChar(50)
  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt
}

//detalle de productos en la compra
model productos_compra {
  id Int @id @default(autoincrement())
  id_compra Int
  id_producto Int
  cantidad Int @default(1)
  precio Decimal
  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt
}

//CATEGORIAS DE PRODUCTOS
model categorias {
  id Int @id @default(autoincrement())
  nombre String @db.VarChar(100)
  status Boolean? @default(true)
  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt
}


//CARACTERÍSTICAS DE PRODUCTOS
model caracteristicas {
  id Int @id @default(autoincrement())
  nombre String @db.VarChar(255)
  valor String @db.VarChar(255)
  id_producto Int 
  status Boolean? @default(true)
  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt
}

//productos
model productos {
  id Int @id @default(autoincrement())
  nombre String @db.VarChar(255)
  descripcion String @db.VarChar(255)
  id_categoria Int
  precio Decimal
  precio_descuento Decimal?
  en_descuento Boolean? @default(false)
  stock Int? 
  id_usuario Int?
  imagen_default String? @db.VarChar(255)
  status Boolean? @default(true)
  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt
}

//Carrito de compra
model carrito_compra {
  id Int @id @default(autoincrement())
  id_usuario Int
  status Boolean? @default(true)
  subtotal Decimal
  total Decimal
  descuento Decimal? @default(0)
  aplica_cupon Boolean? @default(false)
  id_cupon Int?
  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt
} 

//productos en el carrito
model carrito_productos {
  id Int @id @default(autoincrement())
  id_carrito Int
  id_producto Int
  cantidad Int @default(1)
  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt
}

//Métodos de pago
model metodos_pago {
  id Int @id @default(autoincrement())
  nombre String @db.VarChar(100)
  tipo String? @db.VarChar(100)
  numero_tarjeta String? @db.VarChar(100)
  fecha_vencimiento DateTime?
  cvv Int?
  id_usuario Int
  id_paypal String? @db.VarChar(100)
  id_stripe String? @db.VarChar(255)
  status Boolean? @default(true)
  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt
}

//cupones de descuento
model cupones {
  id Int @id @default(autoincrement())
  nombre String @db.VarChar(100) @unique
  descripcion String @db.VarChar(255)
  porcentaje_descuento Float
  limite_usos Int? @default(1)
  fecha_inicio DateTime @default(now())
  fecha_fin DateTime
  status Boolean? @default(true)
  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt
}

//detalle de cupones usados
model cupon_uso {
  id Int @id @default(autoincrement())
  id_usuario Int
  id_cupon Int
  id_compra Int
  fecha_uso DateTime @default(now())
  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt
}


